# Nuget Lua
name: MSBuild

on:
  push:
    # branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        configuration: [Debug]
        platform: [x64]
        # configuration: [Debug, Release]
        # platform: [x64, x86]
        toolset: [v120]
        # toolset: [v140, v141, v142, v143]
        # toolset: [v120, v140, v141, v142, v143]
    runs-on: windows-2022
    steps:

    - uses: actions/checkout@v3

    - name: Prepare Environment
      shell: pwsh
      run: |
        if ('${{matrix.toolset}}' -Match 'v120') {
          $winTarget = '10.0'
          $vs2022addMod = ''
        }
        if ('${{matrix.toolset}}' -Match 'v140') {
          $winTarget = '10.0.19041.0'
          $vs2022addMod = 'Microsoft.VisualStudio.Component.VC.140'
        }
        if ('${{matrix.toolset}}' -Match 'v141') {
          $winTarget = '10.0.19041.0'
          $vs2022addMod = 'Microsoft.VisualStudio.Component.VC.v141.x86.x64'
        }
        if ('${{matrix.toolset}}' -Match 'v142') {
          $winTarget = '10.0'
          $vs2022addMod = 'Microsoft.VisualStudio.Component.VC.14.29.16.11.x86.x64'
        }
        if ('${{matrix.toolset}}' -Match 'v143') {
          $winTarget = '10.0'
          $vs2022addMod = ''
        }      
        Write-Output "BUILD_WINTARGET=$winTarget" >> $env:GITHUB_ENV
        Write-Output "VS2022_ADD_MODULE=$vs2022addMod" >> $env:GITHUB_ENV

    - name: Install VS 2013 tools
      if: matrix.toolset == 'v120'
      shell: pwsh
      run: |
        choco install microsoft-build-tools-2013

      # choco install vswhere
      # choco install microsoft-build-tools --version=12.0.21005.1
      # vswhere -version "[12,)" -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath
      # gci -recurse -path \ -include msbuild.exe

    - name: Modify Visual Studio 2022
      if: env.VS2022_ADD_MODULE != ''
      shell: pwsh
      run: |
        $component = "${{env.VS2022_ADD_MODULE}}"
        Write-Host "Adding:" $component
        Start-Process -FilePath "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" -ArgumentList "export","--config","info-pre.txt","--installPath","`"C:\Program Files\Microsoft Visual Studio\2022\Enterprise`"","--passive","--noUpdateInstaller" -Wait
        Write-Host "PRE:"
        gc info-pre.txt
        Start-Process -FilePath "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" -ArgumentList "modify","--add",$component,"--installPath","`"C:\Program Files\Microsoft Visual Studio\2022\Enterprise`"","--passive","--includeRecommended","--norestart","--noUpdateInstaller" -Wait
        Start-Process -FilePath "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vs_installer.exe" -ArgumentList "export","--config","info-post.txt","--installPath","`"C:\Program Files\Microsoft Visual Studio\2022\Enterprise`"","--passive","--noUpdateInstaller" -Wait
        Write-Host "POST:"
        gc info-post.txt
        gc info-post.txt | Select-String $component

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1
      if: matrix.toolset == 'v140' || matrix.toolset == 'v141' || matrix.toolset == 'v142' || matrix.toolset == 'v143'

    - name: Patch VSProj toolset
      shell: pwsh
      run: |
        gci -r '*.vcxproj' | foreach {
          $proj = [xml](Get-Content $_)
          [System.Xml.XmlNamespaceManager]$ns = $proj.NameTable
          $ns.AddNamespace("Any", $proj.DocumentElement.NamespaceURI)
          $proj.SelectNodes("//Any:PlatformToolset", $ns) | foreach { $_.InnerText = '${{matrix.toolset}}' }
          $proj.SelectNodes("//Any:WindowsTargetPlatformVersion", $ns) | foreach { $_.InnerText = '${{env.BUILD_WINTARGET}}' }
          $proj.save($_)
        }

    # - name: Restore NuGet packages
    #   working-directory: ${{env.GITHUB_WORKSPACE}}
    #   run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    # Add additional options to the MSBuild command line here (like platform or verbosity level).
    # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{matrix.configuration}} /p:Platform=${{matrix.platform}} ${{env.SOLUTION_FILE_PATH}}

    # - name: Test ToolboxLib
    #   working-directory: ${{env.GITHUB_WORKSPACE}}
    #   run: vstest.console.exe ToolboxLibUnitTest/${{env.ARTIFACT_PATH}}/ToolboxLibUnitTest.dll

    # - name: Test Console App
    #   shell: pwsh
    #   run: ConsoleApp\runtest.ps1 "${{env.ARTIFACT_PATH}}" "${{github.workspace}}"

    # - name: Finalize Release Package
    #   shell: pwsh
    #   run: |
    #     mkdir bin/OpenHere
    #     mkdir bin/OpenHere/OpenHereSettings
    #     copy "${{env.ARTIFACT_PATH}}/*" "bin/OpenHere/OpenHereSettings" -Exclude "*.pdb"
    #     move bin/OpenHere/OpenHereSettings/OpenHere.exe bin/OpenHere
    #     move bin/OpenHere/OpenHereSettings/OpenHereCon.exe bin/OpenHere
    #     copy LICENSE bin/OpenHere
    #     $lines = [System.Collections.ArrayList](get-content README.md)
    #     $lines.Insert(2, "Version ${{env.FULL_VERSION_NUMBER}}");
    #     $newLines = @()
    #     $inc = $true
    #     $lines | foreach { if ($_ -match "\s*<!---\s+START\s+STRIP\s+-->\s*") { $inc = $false; } elseif ($_ -match "\s*<!---\s+END\s+STRIP\s+-->\s*") { $inc = $true } elseif ($inc) { $newLines += $_ } }
    #     set-content bin\OpenHere\README.md $newLines
    #     @{
    #     "_type" = "ComponentSourceManifest";
    #     "_version" = 1;
    #     "components" = @( @{
    #         "name" = "Open Here";
    #         "source" = @( @{
    #             "type" = "git";
    #             "url" = "https://github.com/sgrottel/open-here.git";
    #             "hash" = "${{github.sha}}";
    #             "version" = "${{env.FULL_VERSION_NUMBER}}";
    #             "subset" = "github releases"
    #         } )
    #     } ) } | ConvertTo-Json -Depth 10 > "bin/OpenHere/ComponentSource.json"

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3.1.0
      with:
        name: lua-bin
        path: bin
        retention-days: 1
        if-no-files-found: error
